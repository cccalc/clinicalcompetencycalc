name: Run Tests

on:
  push:

jobs:
  test-frontend:
    name: Test Frontend (Jest)
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd frontend
          npm install
          
      - name: Run Jest tests
        run: |
          cd frontend
          npm test -- --ci --coverage
          
  test-backend-bart:
    name: Test Backend Bert (unittest)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Initialize environment
        run: |
          cd python/bert
          chmod +x init.sh
          ./init.sh
          
      - name: Run tests
        run: |
          if [ ! -d "python/bart/testing" ]; then
            echo "python/bart/testing folder not found, skipping tests for Bart";
            exit 0;
          fi        
          cd python/bert
          . .venv/bin/activate
          cd testing
          for file in *.py; do python3 -m unittest "$file" -v; done
          
  test-backend-svm:
    name: Test Backend SVM (unittest)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Initialize environment
        run: |
          cd python/svm
          chmod +x init.sh
          ./init.sh
          
      - name: Run tests
        run: |
          if [ ! -d "python/svm/testing" ]; then
            echo "python/svm/testing folder not found, skipping tests for SVM";
            exit 0;
          fi        
          cd python/svm
          . .venv/bin/activate
          cd testing
          for file in *.py; do python3 -m unittest "$file" -v; done
